// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model result {
  id              Int       @id @default(autoincrement())
  userName        String
  predictedResult String
  library         library   @relation(fields: [libraryId], references: [id], onDelete: Cascade)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  protein         protein[]
  libraryId       Int       @default(1)
}

model library {
  id     Int      @id @default(autoincrement())
  title  String   @default("Default")
  result result[]
}

model protein {
  id         Int      @id @default(autoincrement())
  protein    String
  importance Float
  abundance  Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  result     result   @relation(fields: [resultId], references: [id], onDelete: Cascade)
  resultId   Int
}
